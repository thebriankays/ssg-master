.scrollingImages {
  position: relative;
  width: 100%;
  overflow: visible; // Allow scaled elements to be visible
  
  &.infiniteScroll {
    // Additional styles for infinite scroll mode if needed
  }
}

.grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 5vh;
  width: 100%;
  padding: 0 2rem; // Add some padding to prevent clipping on scale
}

.gridItem {
  height: var(--image-height, 100vh);
  background-size: cover;
  background-position: 50% 50%;
  background-repeat: no-repeat;
  position: relative;
  overflow: hidden;
  will-change: transform, opacity, filter; // Optimize for animations
  transform-style: preserve-3d; // Ensure 3D transforms work properly
  backface-visibility: hidden; // Prevent flickering
  
  // Ensure images are visible during loading
  &::before {
    content: '';
    position: absolute;
    inset: 0;
    background: rgba(0, 0, 0, 0.05);
    opacity: 0;
    transition: opacity 0.3s ease;
    pointer-events: none;
  }
  
  // Mobile optimizations
  @media (max-width: 768px) {
    height: calc(var(--image-height, 100vh) * 0.8);
  }
}

// Responsive adjustments
@media (max-width: 1024px) {
  .grid {
    grid-template-columns: repeat(2, 1fr);
    gap: 3vh;
    padding: 0 1rem;
  }
}

@media (max-width: 640px) {
  .grid {
    grid-template-columns: 1fr;
    gap: 2vh;
    padding: 0 0.5rem;
  }
}

// Loading state
.scrollingImages:global(.loading) {
  .gridItem {
    &::before {
      opacity: 1;
    }
  }
}

// Debug - remove this after testing
.scrollingImages {
  .gridItem {
    border: 1px solid rgba(255, 255, 255, 0.1); // Subtle border to see element bounds
  }
}
